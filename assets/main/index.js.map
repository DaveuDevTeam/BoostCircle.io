{"version":3,"sources":["assets/scripts/player.js","assets/migration/use_v2.0.x_cc.Toggle_event.js"],"names":["stats","timer","delay","round","gameover","cc","Class","extends","Component","properties","jump","find","getComponent","AudioSource","play","this","rigidbody","applyForceToCenter","v2","direction","tween","node","to","angle","start","onCollisionEnter","other","destroy","onLoad","_this","active","spawnInterval","roundInterval","setInterval","clamp","Infinity","Label","string","clearInterval","spawn","min","max","scene","director","getScene","instantiate","parent","RigidBody","type","RigidBodyType","Dynamic","setPosition","Math","ceil","floor","random","time","updateTimer","getChildByName","stop","num","getCollisionManager","enabled","physicsManager","getPhysicsManager","gravity","systemEvent","on","SystemEvent","EventType","KEY_DOWN","e","keyCode","macro","KEY","w","space","up","a","left","d","right","KEY_UP","update","Toggle","_triggerEventInScript_check"],"mappings":"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","sourcesContent":["const gravity = 1000;\n\nvar stats = {\n\ttimer: 15,\n\tdelay: 5000,\n\tround: 0,\n\tgameover: false\n};\n\ncc.Class({\n\textends: cc.Component,\n\n\tproperties: {\n\t\t/*\n\t\trigidbody: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t}\n\t\t*/\n\t},\n\n\tjump: function() {\n\t\tcc.find('Canvas/jumpSound').getComponent(cc.AudioSource).play();\n\t\tthis.rigidbody.applyForceToCenter(cc.v2(0, 5000 * 17), true);\n\t\tif (this.direction != 0) {\n\t\t\tcc.tween(this.node).to(0.25, {angle: this.node.angle + (180 * this.direction)}).start();\n\t\t}\n\t},\n\n\tonCollisionEnter(other, self) {\n\t\tcc.find('Canvas/hitSound').getComponent(cc.AudioSource).play();\n\t\tother.node.destroy();\n\t},\n\n\tonLoad: function () {\n\t\tcc.find('Canvas/gameoverLabel').active = false;\n\t\tcc.find('Canvas/objectiveLabel').active = true;\n\n\t\tvar spawnInterval = null;\n\n\t\tvar roundInterval = setInterval(function() {\n\t\t\tif (spawnInterval) {\n\t\t\t\tcc.find('Canvas/objectiveLabel').active = false;\n\t\t\t\tstats.delay = clamp(stats.delay / 1.125, 500, Infinity);\n\t\t\t\tstats.timer = clamp(stats.timer / 1.075, 3, Infinity);\n\t\t\t\tstats.round += 1;\n\t\t\t\tcc.find('Canvas/roundSound').getComponent(cc.AudioSource).play();\n\t\t\t\tcc.find('Canvas/roundLabel').getComponent(cc.Label).string = 'ROUND: ' + stats.round;\n\t\t\t\tclearInterval(spawnInterval);\n\t\t\t}\n\t\t\tspawnInterval = setInterval(spawn, stats.delay);\n\t\t}, 10000);\n\n\t\tfunction spawn() {\n\t\t\tvar scene = cc.director.getScene();\n\t\t\tvar node = cc.instantiate(cc.find('Canvas/tnt'));\n\t\t\tnode.parent = scene;\n\t\t\tnode.getComponent(cc.RigidBody).type = cc.RigidBodyType.Dynamic;\n\t\t\tnode.setPosition(random(75, 960), 600);\n\t\t\tvar time = stats.timer;\n\t\t\tfunction updateTimer() {\n\t\t\t\tnode.getChildByName('timer').getComponent(cc.Label).string = Math.floor(time) + 's';\n\t\t\t}\n\t\t\tupdateTimer();\n\t\t\tvar timer = setInterval(function() {\n\t\t\t\tif (node.active && !stats.gameover) {\n\t\t\t\t\tif ((time - 1) <= 0) {\n\t\t\t\t\t\tcc.find('Canvas/backgroundSound').getComponent(cc.AudioSource).stop();\n\t\t\t\t\t\tcc.find('Canvas/explosionSound').getComponent(cc.AudioSource).play();\n\t\t\t\t\t\tcc.find('Canvas/gameoverSound').getComponent(cc.AudioSource).play();\n\t\t\t\t\t\tcc.find('Canvas/gameoverLabel').active = true;\n\t\t\t\t\t\tstats.gameover = true;\n\t\t\t\t\t\tclearInterval(roundInterval);\n\t\t\t\t\t\tclearInterval(spawnInterval);\n\t\t\t\t\t\tclearInterval(timer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttime --;\n\t\t\t\t\t\tupdateTimer();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t}\n\n\t\tfunction random(min, max) {\n\t\t\tmin = Math.ceil(min);\n\t\t\tmax = Math.floor(max);\n\t\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\n\t\t}\n\n\t\tfunction clamp(num, min, max) {\n\t\t\treturn num <= min ? min : num >= max ? max : num;\n\t\t}\n\n\t\tlet collisionManager = cc.director.getCollisionManager();\n\t\tcollisionManager.enabled = true;\n\t\t//collisionManager.enabledDebugDraw = true;\n\t\t//collisionManager.enabledDrawBoundingBox = true;\n\n\t\tthis.direction = 0;\n\t\tthis.rigidbody = this.getComponent(cc.RigidBody);\n\n\t\tlet physicsManager = cc.director.getPhysicsManager();\n\t\tphysicsManager.enabled = true;\n\t\tphysicsManager.gravity = cc.v2(0, -gravity);\n\t\t\n\t\tcc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, (e) => {\n\t\t\tif (stats.gameover) return;\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase cc.macro.KEY.w:\n\t\t\t\t\tthis.jump();\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.space:\n\t\t\t\t\tthis.jump();\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.up:\n\t\t\t\t\tthis.jump();\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.a:\n\t\t\t\t\tthis.direction = -1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.left:\n\t\t\t\t\tthis.direction = -1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.d:\n\t\t\t\t\tthis.direction = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.right:\n\t\t\t\t\tthis.direction = 1;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tcc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, (e) => {\n\t\t\tif (stats.gameover) return;\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase cc.macro.KEY.a:\n\t\t\t\t\tthis.direction = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.left:\n\t\t\t\t\tthis.direction = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.d:\n\t\t\t\t\tthis.direction = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase cc.macro.KEY.right:\n\t\t\t\t\tthis.direction = 0;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t},\n\n\tupdate: function(dt) {\n\t\tif (this.direction != 0) {\n\t\t\tthis.rigidbody.applyForceToCenter(cc.v2(1000 * this.direction, 0), true);\n\t\t}\n\t},\n});\n\n\t\t/*\n\t\tfor (const spike of cc.find('spikes').children) {\n\t\t\tconst rigidBody = spike.getComponent(cc.RigidBody);\n\t\t\trigidBody.applyForceToCenter(cc.v2(-((rigidBody.getMass() * gravity) * 0.25), 0), true);\n\t\t}\n\t\t*/\n\n\t\t/*\n\t\tif (this.direction == 1) {\n\t\t\t// left\n\t\t\tthis.speed += this.accel * dt;\n\t\t} else if (this.direction == -1) {\n\t\t\t// right\n\t\t\tthis.speed -= this.accel * dt;\n\t\t}\n\n\t\tif (Math.abs(this.speed) > this.maxSpeed) {\n\t\t\tthis.speed = this.maxSpeed * this.speed / Math.abs(this.speed);\n\t\t}\n\t\t\n\t\tthis.node.x += this.speed * dt;\n\t\t*/","/*\r\n * This script is automatically generated by Cocos Creator and is only compatible with projects prior to v2.1.0.\r\n * You do not need to manually add this script in any other project.\r\n * If you don't use cc.Toggle in your project, you can delete this script directly.\r\n * If your project is hosted in VCS such as git, submit this script together.\r\n *\r\n * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 之前版本的工程，\r\n * 你无需在任何其它项目中手动添加此脚本。\r\n * 如果你的项目中没用到 Toggle，可直接删除该脚本。\r\n * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。\r\n */\r\n\r\nif (cc.Toggle) {\r\n    // Whether the 'toggle' and 'checkEvents' events are fired when 'toggle.check() / toggle.uncheck()' is called in the code\r\n    // 在代码中调用 'toggle.check() / toggle.uncheck()' 时是否触发 'toggle' 与 'checkEvents' 事件\r\n    cc.Toggle._triggerEventInScript_check = true;\r\n}\r\n"],"file":"index.js"}